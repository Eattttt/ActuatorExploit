"""
Simple HTTP server in python for logging requests
Usage::
    ./http_server.py [<port>]       # default port 8123
"""
from sys import argv
from http.server import BaseHTTPRequestHandler, HTTPServer
import urllib
hostName = "0.0.0.0"
class ServerHandler(BaseHTTPRequestHandler):
    def _set_headers(self, status=200):
        self.send_response(status)
        self.send_header('Content-type', 'text/html')
        self.send_header("Simple Server", "S-W-S")
        self.end_headers()

    def do_GET(self):
        self._set_headers()
        buf = '''<!DOCTYPE HTML>
        <html>
            <head><title>Get page</title></head>
            <body>OK!</body>
        </html>'''
        print(self.headers.get('Authorization'))
        self.wfile.write(bytes(buf,"utf-8"))

    def do_HEAD(self):
        self._set_headers()

    def do_POST(self):
        self._set_headers()
        print(self.headers)
        buf = '''<!DOCTYPE HTML>
        <html>
            <head><title>Post page</title></head>
            <body>OK!</body>
        </html>'''
        self.wfile.write(buf.encode('utf-8'))
    def do_PUT(self):
        self._set_headers()
        print(self.headers)
        buf = '''<!DOCTYPE HTML>
        <html>
            <head><title>Post page</title></head>
            <body>OK!</body>
        </html>'''
        self.wfile.write(buf.encode('utf-8'))

def run_server(port=8123):
    webServer=HTTPServer((hostName, port), ServerHandler)
    print("Server started http://%s:%s\r\n" % (hostName, port))

    try:
        webServer.serve_forever()
    except KeyboardInterrupt:
        pass

    webServer.server_close()
    print("\nServer stopped.")


if __name__ == '__main__':
    if len(argv) == 2:
        run_server(port=int(argv[1]))
    else:
        run_server()